@inject ISyncLocalStorageService LocalStorageService
@inject ICartService CartService
@inject IProductService ProductService
@inject NavigationManager NavigationManager
@implements IDisposable

<a href="cart" class="btn btn-info">
	<i class="oi oi-cart"></i>
	Cart
	<span class="badge badge-pill badge-light">@GetProductCount()</span>
</a>

@code 
{
	private Product selectedProduct;

	protected override void OnInitialized()
	{
		CartService.OnChange += StateHasChanged;
	}

	public void Dispose()
	{
		CartService.OnChange -= StateHasChanged;
	}

	private int GetProductCount()
	{
		var cart = LocalStorageService.GetItem<List<ProductVariant>>("cart");
		return cart != null ? cart.Count : 0;
	}

	private void HandlerSearch(Product product)
	{
		if (product == null) return;
		selectedProduct = product;
		NavigationManager.NavigateTo($"product/{selectedProduct.Id}");
	}

	private async Task<IEnumerable<Product>> SearchProduct(string searchText)
	{
		var response = await ProductService.SearchProducts(searchText);
		return response;
	}
}
